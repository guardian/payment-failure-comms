Transform: AWS::Serverless-2016-10-31
Description: Source code in https://github.com/guardian/payment-failure-comms

Parameters:
  Stage:
    Description: Stage name
    Type: String
    AllowedValues:
      - PROD
      - CODE
      - DEV
    Default: DEV
  AppName:
    Type: String
    Default: payment-failure-comms

Conditions:
  IsProd: !Equals [ !Ref Stage, PROD ]

Mappings:
  StageMap:
    PROD:
      Schedule: 'rate(30 minutes)'
      SalesforceStage: DEV
      SalesforceUsername: pfCommsAPIUser
      SalesforceAppName: AwsConnectorSandbox
      IdapiInstanceUrl: idapi.theguardian.com
      IdapiStage: PROD
      BrazeInstanceUrl: rest.fra-01.braze.eu
      BrazeAppGroup: DEV
    CODE:
      Schedule: 'rate(365 days)'
      SalesforceStage: DEV
      SalesforceUsername: pfCommsAPIUser
      SalesforceAppName: AwsConnectorSandbox
      IdapiInstanceUrl: idapi.code.dev-theguardian.com
      IdapiStage: CODE
      BrazeInstanceUrl: rest.fra-01.braze.eu
      BrazeAppGroup: DEV
    DEV:
      Schedule: 'rate(365 days)'
      SalesforceStage: DEV
      SalesforceUsername: pfCommsAPIUser
      SalesforceAppName: AwsConnectorSandbox
      IdapiInstanceUrl: idapi.code.dev-theguardian.com
      IdapiStage: CODE
      BrazeInstanceUrl: rest.fra-01.braze.eu
      BrazeAppGroup: DEV

Resources:

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${AppName}-${Stage}
      RetentionInDays: 14

  PaymentFailureCommsLambda:
    Type: AWS::Serverless::Function
    DependsOn: LogGroup
    Properties:
      FunctionName: !Sub ${AppName}-${Stage}
      Handler: payment_failure_comms.Handler::handleRequest
      Runtime: java8.al2
      CodeUri:
        Bucket: membership-dist
        Key: !Sub membership/${Stage}/${AppName}/${AppName}.jar
      Timeout: 120
      MemorySize: 256
      Environment:
        Variables:
          salesforceApiVersion: v46.0
          salesforceInstanceUrl:
            !Sub
            - '{{resolve:secretsmanager:${SalesforceStage}/Salesforce/ConnectedApp/${SalesforceAppName}:SecretString:authUrl}}'
            - SalesforceStage: !FindInMap [ StageMap, !Ref Stage, SalesforceStage ]
              SalesforceAppName: !FindInMap [ StageMap, !Ref Stage, SalesforceAppName ]
          salesforceClientId:
            !Sub
            - '{{resolve:secretsmanager:${SalesforceStage}/Salesforce/ConnectedApp/${SalesforceAppName}:SecretString:clientId}}'
            - SalesforceStage: !FindInMap [ StageMap, !Ref Stage, SalesforceStage ]
              SalesforceAppName: !FindInMap [ StageMap, !Ref Stage, SalesforceAppName ]
          salesforceClientSecret:
            !Sub
            - '{{resolve:secretsmanager:${SalesforceStage}/Salesforce/ConnectedApp/${SalesforceAppName}:SecretString:clientSecret}}'
            - SalesforceStage: !FindInMap [ StageMap, !Ref Stage, SalesforceStage ]
              SalesforceAppName: !FindInMap [ StageMap, !Ref Stage, SalesforceAppName ]
          salesforceUsername:
            !Sub
            - '{{resolve:secretsmanager:${SalesforceStage}/Salesforce/User/${SalesforceUsername}:SecretString:sfUsername}}'
            - SalesforceStage: !FindInMap [ StageMap, !Ref Stage, SalesforceStage ]
              SalesforceUsername: !FindInMap [ StageMap, !Ref Stage, SalesforceUsername ]
          salesforcePassword:
            !Sub
            - '{{resolve:secretsmanager:${SalesforceStage}/Salesforce/User/${SalesforceUsername}:SecretString:sfPassword}}'
            - SalesforceStage: !FindInMap [ StageMap, !Ref Stage, SalesforceStage ]
              SalesforceUsername: !FindInMap [ StageMap, !Ref Stage, SalesforceUsername ]
          salesforceToken:
            !Sub
            - '{{resolve:secretsmanager:${SalesforceStage}/Salesforce/User/${SalesforceUsername}:SecretString:sfToken}}'
            - SalesforceStage: !FindInMap [ StageMap, !Ref Stage, SalesforceStage ]
              SalesforceUsername: !FindInMap [ StageMap, !Ref Stage, SalesforceUsername ]
          idapiInstanceUrl: !FindInMap [ StageMap, !Ref Stage, IdapiInstanceUrl ]
          idapiBearerToken: !Sub
            - '{{resolve:secretsmanager:IDAPI/${IdapiStage}/${AppName}:SecretString:bearerToken}}'
            - IdapiStage: !FindInMap [ StageMap, !Ref Stage, IdapiStage ]
          brazeInstanceUrl: !FindInMap [ StageMap, !Ref Stage, BrazeInstanceUrl ]
          brazeBearerToken:
            !Sub
            - '{{resolve:secretsmanager:Braze/${BrazeAppGroup}/${AppName}:SecretString:bearerToken}}'
            - BrazeAppGroup: !FindInMap [ StageMap, !Ref Stage, BrazeAppGroup ]
          zuoraAppIdForBraze:
            !Sub
            - '{{resolve:secretsmanager:Braze/${BrazeAppGroup}/${AppName}:SecretString:zuoraAppId}}'
            - BrazeAppGroup: !FindInMap [ StageMap, !Ref Stage, BrazeAppGroup ]
      Events:
        ScheduledRun:
          Type: Schedule
          Properties:
            Schedule: !FindInMap [ StageMap, !Ref Stage, Schedule ]
            Description: Send payment failure communications
            Enabled: False

  FailureAlarm:
    Type: AWS::CloudWatch::Alarm
#    TODO reinstate
#    Condition: IsProd
    DependsOn: PaymentFailureCommsLambda
    Properties:
#      AlarmName: "URGENT 9-5 - PROD: Failed to send payment-failure events to Braze"
      AlarmName: "Testing PF alarm"
      AlarmDescription: >
        IMPACT: If this goes unaddressed, at least one payment-failure event won't be communicated to the customer.
        For resolution steps, see https://github.com/guardian/payment-failure-comms/blob/main/README.md#alarms.
      AlarmActions:
        - !Sub arn:aws:sns:${AWS::Region}:${AWS::AccountId}:retention-dev
      MetricName: Errors
      Namespace: AWS/Lambda
      Dimensions:
        - Name: FunctionName
          Value: !Ref PaymentFailureCommsLambda
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Threshold: 1
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      TreatMissingData: ignore
